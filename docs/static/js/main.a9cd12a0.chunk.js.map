{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","$root","document","getElementById","ReactDOM","render"],"mappings":"2MAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KA8B9C,OACE,mCACA,sBAAMC,SApBa,SAACC,GAEpBA,EAAEC,iBAGCJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAYlB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAC1BU,SA9BsB,SAACP,GAIvBF,EAAcE,EAAEQ,OAAOF,e,+BCVZG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGDI,MAAMF,GAHL,cAGbG,EAHa,gBAIEA,EAAIC,OAJN,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EAExB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAgBZM,GAhBY,4CAAH,sDCAXO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAIlC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECJX,SAACA,GAAa,IAAD,EAGXd,mBAAS,CAE/BqB,KAAM,GACNa,SAAS,IANwB,mBAG9BC,EAH8B,KAGvBC,EAHuB,KA+BrC,OArBAC,qBAAU,WAGNxB,EAAQC,GAAUwB,MAAK,SAAAC,GAGnBH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,GAGd,UAKH,CAACpB,IAKGqB,EDxByBK,CAAa1B,GAAhCa,EAHsB,EAG3BN,KAAaa,EAHc,EAGdA,QAMrB,OACI,qCACA,6BAAKpB,IAEFoB,GAAW,0CAEd,qBAAKJ,UAAU,YAAf,SAKYH,EAAOJ,KAAI,SAAAC,GAGJ,OAAQ,cAAC,EAAD,eAEHA,GADAA,EAAIC,aE1BvBgB,EAAe,WAAM,MAIIzC,mBAAS,CAAC,cAJd,mBAIzB0C,EAJyB,KAIb3C,EAJa,KAchC,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,uBAIA,6BAGI2C,EAAWnB,KAAI,SAACT,GAGZ,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YC5B7B6B,EAAQC,SAASC,eAAe,QAEtCC,IAASC,OAAQ,cAAC,EAAD,IAAiBJ,K","file":"static/js/main.a9cd12a0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from \"react\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) =>{\r\n\r\n    //   console.log(e.target.value);\r\n\r\n      setInputValue(e.target.value);\r\n\r\n  }\r\n\r\n  const handleSubmit = (e) =>{\r\n\r\n    e.preventDefault();\r\n\r\n\r\n    if(inputValue.trim().length > 2){\r\n\r\n        setCategories( cats => [inputValue, ...cats] );\r\n        setInputValue('');\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} \r\n      onChange={ handleInputChange } />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategories : PropTypes.func.isRequired\r\n\r\n\r\n}\r\n","\r\n\r\n    export const getGifs = async (category) =>{\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI (category)}&limit=10&api_key=Nigz9DaPWRyYPTLNBjNdpA8BO37cNs4j`;\r\n        const res = await fetch(url);\r\n        const {data} = await res.json();\r\n\r\n        const gifs = data.map(img =>{\r\n\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n\r\n        })\r\n\r\n        return gifs;\r\n    \r\n\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    // console.log(props);\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n// import { GifExpertApp } from '../GifExpertApp'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const { data:images, loading} = useFetchGifs(category);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n\r\n          {loading && <p> loading </p> }\r\n\r\n        <div className='card-grid' >\r\n  \r\n                {\r\n                    \r\n\r\n                    images.map(img=>{\r\n\r\n                        {\r\n                           return (<GifGridItem\r\n                           key={img.id}\r\n                           { ...img }\r\n                           />)\r\n                        }\r\n\r\n                    })\r\n\r\n\r\n                    }\r\n                \r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import {useEffect, useState} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) =>{\r\n\r\n\r\n    const [state, setstate] = useState({\r\n\r\n        data: [],\r\n        loading: true,\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        //promesa\r\n        getGifs(category).then(imgs=>{\r\n\r\n\r\n            setstate({\r\n                data: imgs,\r\n                loading:false\r\n\r\n\r\n        },3000);\r\n\r\n        })\r\n\r\n\r\n    }, [category]);\r\n\r\n\r\n\r\n\r\n    return state;\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import React, { useState } from \"react\";\r\n\r\nimport {AddCategory} from './components/AddCategory.js';\r\nimport { GifGrid } from \"./components/GifGrid.js\";\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n//   const cats = [\"One punch\", \"Samurai X\", \"Dragon Ball\"];\r\n\r\n  const [categories, setCategories] = useState([\"One punch\"]);\r\n\r\n\r\n    const handleAdd = () =>{\r\n\r\n        // setCategories( [...setCategories,'hunterXhunter'] );\r\n        // setCategories( cats => [...cats, 'hunterXhunter' ] );\r\n\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <br />\r\n\r\n      {/* <button onClick={ handleAdd }>Agregar</button> */}\r\n      \r\n      <ol>\r\n          { \r\n          \r\n          categories.map((category)=>{\r\n\r\n\r\n              return <GifGrid key={category} category={category} />\r\n\r\n          })\r\n\r\n          }\r\n      </ol>\r\n\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp.js';\n\n\nconst $root = document.getElementById('root');\n\nReactDOM.render( <GifExpertApp />,$root);\n\n\n\n"],"sourceRoot":""}